[buildout]
develop = ${:directory}/../../.
# List of tests
parts =
    play
    play-and-stop
    jump-to
    start-gui

[test-walkman-part]
recipe = zc.recipe.egg
eggs = walkman
test-code =
initialization =
    def main(): pass
    ${:test-code}
entry-points = ${:_buildout_section_name_}=__main__:main

[test-walkman-part-with-toml-str]
<= test-walkman-part
toml-string =
    [soundfile.example]
    path = "soundfiles/example.wav"
    loop = true
test-code =
    import time
    import walkman
    toml_string = r"""
    ${:toml-string}
    """
    ${:post-toml-code}

[test-audio-walkman-part]
<= test-walkman-part-with-toml-str
post-toml-code =
    audio_host = walkman.configurations.toml_str_to_audio_host(toml_string)
    ${:test-audio-host}

# Test if simple play works.
#
#   It's important that the sound file starts
#   at all.
#
#   It's important that play doesn't have
#   clicks when stopping (there should be an
#   envelope!).
[play]
<= test-audio-walkman-part
test-audio-host =
    audio_host.start()

    time.sleep(0.1)

    audio_host.sound_file_player.play()

    time.sleep(3)

    audio_host.sound_file_player.stop()
    audio_host.stop()

# Test if playing and stopping works.
#
#   It's important that after stopping the sound file
#   and starting the sound file again, it continues
#   where it has been stopped (and doesn't start from
#   beginning again!)
[play-and-stop]
<= test-audio-walkman-part
test-audio-host =
    audio_host.sound_file_player.play()

    delay_time = 1.5

    audio_host.start()
    time.sleep(delay_time)
    audio_host.stop()
    time.sleep(0.5)

    audio_host.start()
    time.sleep(delay_time)
    audio_host.stop()
    time.sleep(0.5)

    audio_host.start()
    time.sleep(delay_time)
    audio_host.stop()

# Test if method "jump_to" works correctly
#
#   Soundfile should jump after 3 seconds to a later part.
#   It's important that there aren't any clicks between the jump.
#   It's also important that the first time it won't stop, but the
#   second time it would.
[jump-to]
<= test-audio-walkman-part
test-audio-host =
    audio_host.start()
    audio_host.sound_file_player.play()
    time.sleep(3)

    audio_host.sound_file_player.jump_to(15)
    time.sleep(3)
    audio_host.stop()
    
    time.sleep(1)

    audio_host.sound_file_player.stop()
    audio_host.sound_file_player.jump_to(1)
    audio_host.sound_file_player.play()
    audio_host.start()
    time.sleep(3)

    audio_host.stop()

# Test if sound file can loop
#
#   TODO(implement)
[loop]
<= test-audio-walkman-part


[start-gui]
<= test-walkman-part-with-toml-str
post-toml-code =
    audio_host = walkman.boot.start_loop_from_toml_str(toml_string)
